# Generated by Django 3.1.7 on 2021-03-12 19:20

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Calculation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adress_object_construction', models.CharField(blank=True, max_length=1000, verbose_name='Адрес строительства')),
                ('title', models.CharField(max_length=255, verbose_name='Название')),
                ('created_date', models.DateField(auto_now_add=True, verbose_name='Дата создания')),
            ],
            options={
                'verbose_name': 'Расчет',
                'verbose_name_plural': 'Расчеты',
            },
        ),
        migrations.CreateModel(
            name='CalculationState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Название статуса')),
            ],
            options={
                'verbose_name': 'Статус',
                'verbose_name_plural': 'Статусы',
            },
        ),
        migrations.CreateModel(
            name='Customers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_name', models.CharField(max_length=255, verbose_name='Фамилия')),
                ('first_name', models.CharField(max_length=255, verbose_name='Имя')),
                ('second_name', models.CharField(blank=True, max_length=255, verbose_name='Отчество')),
                ('phone', models.CharField(max_length=10, verbose_name='Телефон')),
                ('email', models.EmailField(blank=True, max_length=255, verbose_name='E-mail')),
                ('adress', models.CharField(blank=True, max_length=1000, verbose_name='Адрес')),
            ],
            options={
                'verbose_name': 'Заказчик',
                'verbose_name_plural': 'Заказчики',
            },
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Материал',
                'verbose_name_plural': 'Материалы',
            },
        ),
        migrations.CreateModel(
            name='MeasurementUnit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('measurement_unit', models.CharField(max_length=20)),
            ],
            options={
                'verbose_name': 'Единица измерения',
                'verbose_name_plural': 'Единицы измерений',
            },
        ),
        migrations.CreateModel(
            name='PriceList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateField(auto_now_add=True, verbose_name='Дата')),
                ('purchase_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена закупки')),
                ('selling_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена продажи')),
            ],
            options={
                'verbose_name': 'Прайс лист',
                'verbose_name_plural': 'Прайс листы',
            },
        ),
        migrations.CreateModel(
            name='StructuralElementFrame',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_of_floors', models.IntegerField(verbose_name='Количество этажей')),
                ('perimeter_of_external_walls', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Периметр внешних стен')),
                ('base_area', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Площадь основания')),
                ('external_wall_thickness', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Толщина внешних стен')),
                ('internal_wall_length', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Длина внутренних стен')),
                ('internal_wall_thickness', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Толщина внутренних стен')),
                ('height_of_one_floor', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Высота одного этажа')),
                ('overlap_thickness', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Толщина перекрытия')),
                ('steam_waterproofing', models.CharField(max_length=30, verbose_name='Парогидроизоляция')),
                ('windscreen', models.CharField(max_length=30, verbose_name='Ветрозащита')),
                ('insulation', models.CharField(max_length=30, verbose_name='Утеплитель')),
                ('OSB_for_interior_walls', models.CharField(max_length=30, verbose_name='ОСБ для внутренних стен')),
                ('OSB_for_sub_floor', models.CharField(max_length=30, verbose_name='ОСБ для чернового пола')),
                ('OSB_for_ceiling', models.CharField(max_length=30, verbose_name='ОСБ для потолка')),
                ('step_of_racks', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Шаг стоек')),
                ('calculations', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='structural_element_frame', to='calculator.calculation', verbose_name='Расчет')),
            ],
            options={
                'verbose_name': 'Конструктивный элемент каркас',
                'verbose_name_plural': 'Конструктивный элемент каркас',
            },
        ),
        migrations.CreateModel(
            name='SpecificMaterial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название материала')),
                ('length', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Длина')),
                ('width', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Ширина')),
                ('thickness', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Толщина')),
                ('volume', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Объем')),
                ('material', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='specific_materials', to='calculator.material', verbose_name='Материал')),
                ('measurement_unit', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='specific_materials', to='calculator.measurementunit', verbose_name='Единица измерения')),
            ],
            options={
                'verbose_name': 'Характеристики материала',
                'verbose_name_plural': 'Характеристики материала',
            },
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='qwerty', max_length=50, verbose_name='Часть здания')),
                ('amount', models.PositiveIntegerField(verbose_name='Количество')),
                ('calculation', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='results', to='calculator.calculation', verbose_name='Расчет')),
                ('price', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='results', to='calculator.pricelist', verbose_name='Прайс лист')),
                ('specific_material', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='results', to='calculator.specificmaterial', verbose_name='Материал')),
            ],
            options={
                'verbose_name': 'Результат',
                'verbose_name_plural': 'Результаты',
            },
        ),
        migrations.AddField(
            model_name='pricelist',
            name='specific_material',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='price_list', to='calculator.specificmaterial', verbose_name='Материал'),
        ),
        migrations.CreateModel(
            name='Opening',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=50, verbose_name='Тип проема')),
                ('wigth', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Ширина')),
                ('height', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Высота')),
                ('count', models.IntegerField(verbose_name='Количество')),
                ('frame', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='frame', to='calculator.structuralelementframe', verbose_name='каркас')),
            ],
            options={
                'verbose_name': 'Проем',
                'verbose_name_plural': 'Проемы',
            },
        ),
        migrations.CreateModel(
            name='FrameOpening',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('frame', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='calculator.structuralelementframe', verbose_name='каркас')),
                ('opening', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='calculator.opening', verbose_name='проем')),
            ],
        ),
    ]
